# ansible-pull setup
# Based on the ansible-pull script found here: 
# https://github.com/ansible/ansible-examples/blob/master/language_features/ansible_pull.yml

# on remote hosts, set up ansible to run periodically using the latest code
# from a particular checkout, in pull based fashion, inverting Ansible's
# usual push-based operating mode.
#
# This particular pull based mode is ideal for:
# (A) massive scale out
# (B) continual system remediation
#
# DO NOT RUN THIS AGAINST YOUR HOSTS WITHOUT CHANGING THE repo_url
# TO SOMETHING YOU HAVE PERSONALLY VERIFIED
#
# If a host inventory file hasn't been configured, this playbook
# can be run one-off with the following syntax:

# ansible-playbook pull.yml -i $remote-IP,
# Optionally ANSIBLE_HOST_KEY_CHECKING=False to ignore host keys

- hosts: all
  remote_user: root

  vars:

    # User to run ansible-pull as from cron
    cron_user: root

    # File that ansible will use for logs
    logfile: /var/log/ansible-pull.log

    # Directory to where repository will be cloned
    workdir: /var/lib/ansible/local

    # Repository to check out -- YOU MUST CHANGE THIS
    repo_url: https://github.com/mb243/ansible-pullbooks.git

    # Playbook to run. Will be included in cron.
    playbook: local.yml

  tasks:
    - name: System details
      debug: msg="{{item}}"
      with_items: 
      - "{{ansible_distribution}}"
      - "{{ansible_distribution_version}}"

    # CentOS / RHEL source Ansible from the EPEL repo
    - name: Install epel-release for CentOS-family distros
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
      package:
        name: epel-release
        state: present
    - name: Run the equivalent of "apt-get update" for Ubuntu and Debian
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      apt:
        update_cache: yes
    - name: Ensure aptitude is installed on Ubuntu and Debian systems
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      apt:
        name: aptitude 
        state: present
    - name: Install selinux python bindings for Fedora family systems
      when: ansible_distribution == 'Fedora'
      package:
        name: libselinux-python
        state: present
    - name: Install ansible
      package: 
        name: ansible 
        state: present
    - name: Install git
      package:
        name: git
        state: present

    - name: Create local directory to work from
      file:
        path: '{{workdir}}'
        state: directory
        owner: root
        group: root
        mode: 0751

    - name: Create crontab entry to clone/pull git repo
      cron:
        name: ansible-pull
        cron_file: ansible-pull
        user: '{{cron_user}}'
        minute: '*/15'
        job: 'ansible-pull -d {{workdir}} -U {{repo_url}} {{playbook}} >> {{logfile}} 2>&1'

    - name: Create logrotate entry for ansible-pull.log
      copy:
        dest: /etc/logrotate.d/ansible-pull
        owner: root
        group: root
        mode: 0644
        content: |
          {{logfile}} {
            rotate 7
            daily
            compress
            missingok
            notifempty
          }
